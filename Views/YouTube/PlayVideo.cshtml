@model List<YouTubeApiProject.Models.YouTubeVideoModel>

<script src="https://www.youtube.com/iframe_api"></script>
<script>
    let player;

    function onYouTubeIframeAPIReady() {
        console.log('YouTube Iframe API is ready');
        loadVideo('@ViewBag.VideoId'); // Call the loadVideo function when the API is ready
    }

    function loadVideo(videoId) {
        console.log('Loading video with ID:', videoId); // Display video ID in the console
        if (player) {
            player.loadVideoById(videoId); // Load the new video ID if player already exists
        } else {
            player = new YT.Player('videoPlayer', {
                height: '500',
                width: '100%',
                videoId: videoId,
                playerVars: {
                    'autoplay': 1, // Autoplay the video
                    'mute': 0,     // Start unmuted (0 means unmuted)
                    'controls': 1  // Show player controls
                },
                events: {
                    'onReady': onPlayerReady
                }
            });
        }
    }

    function onPlayerReady(event) {
        event.target.playVideo(); // Start the video
    }

    // Add event listener for when the DOM is fully loaded
    document.addEventListener("DOMContentLoaded", function () {
        console.log('DOM fully loaded');
        loadVideo('@ViewBag.VideoId'); // Ensure the video is loaded when the DOM is ready
    });
</script>


<!-- Menu -->

<aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
    <div class="app-brand demo">
        <a asp-area="" asp-controller="Home" asp-action="Index" class="app-brand-link">
            <span class="app-brand-logo demo">
                <img src="../images/logo.png" width="40" alt="Logo">
            </span>
            <span class="app-brand-text demo menu-text fw-bold ms-2">Youtube</span>
        </a>

        <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
            <i class="bx bx-chevron-left bx-sm d-flex align-items-center justify-content-center"></i>
        </a>
    </div>

    <div class="menu-inner-shadow"></div>

    <ul class="menu-inner py-1">
        <!-- Dashboards -->
        <li class="menu-item">
            <a asp-area="" asp-controller="Home" asp-action="Index" class="menu-link">
                <i class="menu-icon tf-icons bx bx-home"></i>
                <div class="text-truncate" data-i18n="Basic">Home</div>
            </a>
        </li>
        <li class="menu-item">
            <a asp-area="" asp-controller="YouTube" asp-action="Trending" class="menu-link">
                <i class="menu-icon tf-icons bx bxs-videos"></i>
                <div class="text-truncate" data-i18n="Basic">Trending</div>
            </a>
        </li>
        <li class="menu-item">
            <a asp-area="" asp-controller="YouTube" asp-action="Index" class="menu-link">
                <i class="menu-icon tf-icons bx bx-search-alt"></i>
                <div class="text-truncate" data-i18n="Basic">Search</div>
            </a>
        </li>
     </ul>

    <!-- Footer Section -->
    <div class="footer mt-4 py-3">
        <div class="text-center">
            &copy; 2024 - Youtube -
            <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </div>
</aside>
<!-- / Menu -->
<!-- Layout container -->
<div class="layout-page">

<nav class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme" id="layout-navbar">
    <div class="layout-menu-toggle navbar-nav align-items-xl-center me-4 me-xl-0 d-xl-none">
        <a class="nav-item nav-link px-0 me-xl-6" href="javascript:void(0)">
            <i class="bx bx-menu bx-md"></i>
        </a>
    </div>

    <div class="navbar-nav-right d-flex align-items-center" id="navbar-collapse">
        <!-- Search -->
            <div class="navbar-nav flex-grow-1">
                <form asp-controller="YouTube" asp-action="Search" method="post" class="w-100">
                    <div class="nav-item d-flex align-items-center w-100">
                        <i class="bx bx-search bx-md me-2"></i>
                        <input type="text" name="query" class="form-control border-0 shadow-none ps-1 ps-sm-2 w-100" placeholder="Search..." />
                    </div>
                </form>
            </div>
        <!-- /Search -->

            <ul class="navbar-nav flex-row align-items-center ms-auto">
                <li class="nav-item">
                    <a class="nav-link" href="https://github.com/mal2ai/YoutubeApiProject.git" target="_blank" title="Click to open GitHub">
                        <img src="../images/pp.jpg" alt="Profile Photo" class="rounded-circle" width="40" height="40">
                    </a>
                </li>
            </ul>
    </div>
</nav>

<!-- / Navbar -->
    <!-- Content wrapper -->
    <div class="content-wrapper">
        <!-- Content -->

        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="row">
                <!-- Video Player Card -->
                <div class="col-md-7">
                    <div class="card">
                        <div class="video-player mt-3" style="padding: 10px; border-radius: 15px; background-color: #f8f9fa;">
                            <!-- Outer div for padding -->
                            <div id="videoPlayer" style="border-radius: 15px; overflow: hidden; height: 500px; width: 100%;"></div>
                        </div>
                    </div>
                </div>

                <!-- Video Details Card -->
                <div class="col-md-5">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="mb-1">@ViewBag.VideoTitle</h4>

                            <!-- Author Info -->
                            <div class="d-flex align-items-center mt-2">
                                <img src="@ViewBag.AuthorProfilePhoto" alt="@ViewBag.AuthorName's profile photo" class="rounded-circle" width="40" height="40">
                                <div class="ms-2">
                                    <h6 class="mb-0">@ViewBag.AuthorName</h6>
                                    <small class="text-muted">@ViewBag.AuthorSubscriberCount subscribers</small>
                                </div>
                            </div>


                            <div class="mt-4">
                                <div class="card" style="background-color: rgba(0, 0, 0, 0.05);">
                                    <div class="card-body">
                                        <strong>@ViewBag.ViewCount</strong>
                                        <span class="text-muted"> • @Html.Raw(ViewBag.PublishedAt)</span>
                                        <!-- Video Description -->
                                        <div class="mt-3">
                                            <p id="shortDescription">
                                                @{
                                                    var description = ViewBag.VideoDescription as string;
                                                    var shortDescriptionLength = 150;

                                                    // Ensure the description is not null or empty
                                                    if (!string.IsNullOrEmpty(description))
                                                    {
                                                        // Calculate the display length, ensuring it does not exceed the description length
                                                        var displayLength = Math.Min(shortDescriptionLength, description.Length);

                                                        // Display the short description
                                                    @Html.Raw(description.Substring(0, displayLength))

                                                        // Show '...more' button if description is longer than the display length
                                                        if (description.Length > shortDescriptionLength)
                                                        {
                                                    <span id="moreContent" style="display: none;">
                                                        @Html.Raw(description.Substring(shortDescriptionLength))
                                                    </span>
                                                    <button id="toggleButton" onclick="toggleDescription()" style="background: none; border: none; color: gray; cursor: pointer;">
                                                        ...more
                                                    </button>
                                                        }
                                                    }
                                                    else
                                                    {
                                                    // Fallback message if the description is empty
                                                    @Html.Raw("No description available.")
                                                    }
                                                }
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- / Content -->
        
        <div class="content-backdrop fade"></div>
    </div>
</div>

<script>
    function toggleDescription() {
        var moreContent = document.getElementById("moreContent");
        var toggleButton = document.getElementById("toggleButton");

        if (moreContent.style.display === "none") {
            moreContent.style.display = "inline";
            toggleButton.textContent = "...less";
        } else {
            moreContent.style.display = "none";
            toggleButton.textContent = "...more";
        }
    }
</script>
<script>
    function toggleDescription() {
        const moreContent = document.getElementById('moreContent');
        const toggleButton = document.getElementById('toggleButton');

        if (moreContent.style.display === 'none') {
            moreContent.style.display = 'inline'; // Show the additional content
            toggleButton.innerText = '...less'; // Change the button text
        } else {
            moreContent.style.display = 'none'; // Hide the additional content
            toggleButton.innerText = '...more'; // Change the button text back
        }
    }
</script>